#include<iostream>
using namespace std; 
void findWaitingTime(int processes[], int n, int bt[], int wt[], int quantum){ 
    int rem_bt[n]; 
    for (int i = 0 ; i < n ; i++){ 
        rem_bt[i] =  bt[i]; 
    }
    int t = 0;  
    while (1){ 
        bool done = true; 
        for (int i = 0 ; i < n; i++){ 
            if (rem_bt[i] > 0){ 
                done = false;  
                  if (rem_bt[i] > quantum){ 
                        t += quantum;  
                        rem_bt[i] -= quantum; 
                } 
                else{ 
                    t = t + rem_bt[i]; 
                    wt[i] = t - bt[i]; 
                    rem_bt[i] = 0; 
                } 
            } 
        } 
        if (done == true){
        break; 
        }
    } 
} 
void findTurnAroundTime(int processes[], int n, int bt[], int wt[], int tat[]){ 
    for (int i = 0; i < n ; i++){
        tat[i] = bt[i] + wt[i]; 
    }
} 
void findavgTime(int processes[], int n, int bt[], int quantum){ 
    int wt[n], tat[n], total_wt = 0, total_tat = 0; 
    findWaitingTime(processes, n, bt, wt, quantum); 
    findTurnAroundTime(processes, n, bt, wt, tat); 
    cout << "Processes "<< " Burst time " << " Waiting time " << " Turn around time\n"; 
    for (int i=0; i<n; i++){ 
        total_wt = total_wt + wt[i]; 
        total_tat = total_tat + tat[i]; 
        cout << " " << i+1 << "\t\t" << bt[i] <<"\t " << wt[i] <<"\t\t " << tat[i] <<endl; 
    } 
      cout << "Average waiting time = " << (float)total_wt / (float)n; 
    cout << "\nAverage turn around time = " << (float)total_tat / (float)n; 
} 
int main() 
{ 
    int n;
    cout << "Enter the number of processes: ";
    cin >> n;

    int processes[n];
    int burst_time[n];

    cout << "Enter the burst times for the processes:\n";
    for (int i = 0; i < n; i++) {
        processes[i] = i + 1; // Process numbers can be 1, 2, 3, ...
        cout << "Burst time for process " << i + 1 << ": ";
        cin >> burst_time[i];
    }

    int quantum;
    cout << "Enter the quantum time: ";
    cin >> quantum;

    findavgTime(processes, n, burst_time, quantum);
    return 0;
} 

OUTPUT :-
Enter the number of processes: 3
Enter the burst times for the processes:
Burst time for process 1: 10
Burst time for process 2: 5
Burst time for process 3: 8
Enter the quantum time: 2
Processes  Burst time  Waiting time  Turn around time
 1          10         12            22
 2          5          7             12
 3          8          10            18
Average waiting time = 9
Average turn around time = 17.3333
